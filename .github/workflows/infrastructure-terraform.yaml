name: Terraform Infrastructure CI/CD

on:
  push:
    branches: [terraform]
  pull_request:
    branches: [terraform]
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      - name: Check S3 bucket
        run: |
          if aws s3 ls "s3://sock-shop-bucket-0906" 2>&1 | grep -q 'NoSuchBucket'
          then
            echo "S3 bucket does not exist. Creating it..."
            aws s3 mb s3://sock-shop-bucket-0906
          else
            echo "S3 bucket exists."
          fi

      - name: Check DynamoDB table
        run: |
          if ! aws dynamodb describe-table --table-name terraform-lock 2>&1 | grep -q 'TableName'
          then
            echo "DynamoDB table does not exist. Creating it..."
            aws dynamodb create-table \
              --table-name terraform-lock \
              --attribute-definitions AttributeName=LockID,AttributeType=S \
              --key-schema AttributeName=LockID,KeyType=HASH \
              --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5
          else
            echo "DynamoDB table exists."
          fi

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0
      
      - name: Clean Terraform
        run: rm -rf .terraform* tfplan*
      
      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=sock-shop-bucket-0906" \
            -backend-config="region=eu-west-2" \
            -backend-config="key=terraform.tfstate"

      #- name: Terraform Init
       # run: terraform init 
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-west-2

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Terraform Plan Review
        run: |
          if [ -f "tfplan" ]; then
            terraform show -json tfplan | jq . | tee plan.json
          fi

      - name: Check if Terraform Plan has changes
        id: check_changes
        run: |
          if terraform show -json tfplan | jq -e '.resource_changes | length > 0'; then
            echo "Changes detected in the Terraform plan."
          else
            echo "No changes detected."
            exit 1
          fi
        continue-on-error: true
      
      - name: Terraform Apply
        if: github.event_name == 'push' && github.ref == 'refs/heads/terraform' && steps.check_changes.outcome == 'success'
        run: terraform apply -auto-approve tfplan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-west-2